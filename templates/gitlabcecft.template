{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "GitLab CE",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": " VPC Network Configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "AccessCIDR",
                        "SubnetId",
                        "VPCID"
                    ]
                },
                {
                    "Label": {
                        "default": "Server Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "KeyPairName",
                        "VolumeType",
                        "ProvisionedIops",
                        "VolumeSize"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "AccessCIDR": {
                    "default": "Permitted IP range"
                },
                "SubnetCIDR": {
                    "default": "Subnet CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VolumeType": {
                    "default": "Volume Type"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "ProvisionedIops": {
                    "default": "Provisioned IOPS"
                },
                "VolumeSize": {
                    "default": "Volume Size"
                },
                "SubnetId": {
                    "default": "Subnet Id"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "AccessCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Description": "The IP address range that can be used to access to the EC2 instance",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "m3.xlarge",
                "m3.2xlarge",
                "m4.xlarge",
                "m4.2xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type for GitLab CE c4.large is recommended",
            "Default": "c4.large",
            "Description": "WebServer EC2 instance type",
            "Type": "String"
        },
        "KeyPairName": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ProvisionedIops": {
            "ConstraintDescription": "Range is 100 to 20000 for Provisioned IOPS SSD volumes",
            "Default": "100",
            "Description": "Set the provisioned IOPs between 100 and 20000. Only set if you are choosing io1 for your volume type",
            "Type": "String"
        },
        "SubnetId": {
            "Description": "The Public subnet where the GitLab CE instance will be launched",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "The VPC to launch the GitLab CE server",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VolumeSize": {
            "Default": "100",
            "Description": "The size of the EBS attached volume",
            "Type": "String"
        },
        "VolumeType": {
            "AllowedValues": [
                "gp2",
                "io1"
            ],
            "Description": "Choose either GP2 or IO1. IO1 is recommended for more than 500 users",
            "Default": "gp2",
            "Type": "String"
        },
        "GitAdminUserid": {
            "Description": "Git admin userid.",
            "Type": "String",
            "Default": "Admin"
        },
        "GitAdminPassword": {
            "Description": "Git admin password.",
            "Type": "String",
            "Default": "AdminPassword",
            "NoEcho": "true"
        },
        "GitAdminEmail": {
            "Description": "Git admin contact email.",
            "Type": "String",
            "Default": ""
        },
        "GitTacUserid": {
            "Description": "Git TAC userid.",
            "Type": "String",
            "Default": "TAC"
        },
        "GitTacPassword": {
            "Description": "Git TAC password.",
            "Type": "String",
            "Default": "TACPassword",
            "NoEcho": "true"
        },
        "GitTacEmail": {
            "Description": "TAC contact email.",
            "Type": "String",
            "Default": ""
        },
        "GitRepo": {
            "Description": "Initial Git repository.",
            "Type": "String",
            "Default": "oodlejobs"
        }
    },
    "Mappings": {
        "Talend": {
            "gitlab": {
                "init": "https://s3.amazonaws.com/baseline.quickstart.talend/bootstrap/git/gitlab-init.sh"
            }
        },
        "AWSAMIRegionMap": {
            "AMI": {
                "GHE29": "GitLab CE 8.17.2"
            },
            "ap-northeast-1": {
                "AMI": "ami-1b30677c"
            },
            "ap-northeast-2": {
                "AMI": "ami-5544943b"
            },
            "ap-south-1": {
                "AMI": "ami-f07f0f9f"
            },
            "ap-southeast-1": {
                "AMI": "ami-34893957"
            },
            "ap-southeast-2": {
                "AMI": "ami-eebbb88d"
            },
            "ca-central-1": {
                "AMI": "ami-7e64d91a"
            },
            "eu-central-1": {
                "AMI": "ami-8666b3e9"
            },
            "eu-west-1": {
                "AMI": "ami-35c4ed53"
            },
            "eu-west-2": {
                "AMI": "ami-49f1e42d"
            },
            "sa-east-1": {
                "AMI": "ami-96c7a1fa"
            },
            "us-east-1": {
                "AMI": "ami-2b31ea3d"
            },
            "us-east-2": {
                "AMI": "ami-0a8bae6f"
            },
            "us-west-1": {
                "AMI": "ami-35fda355"
            },
            "us-west-2": {
                "AMI": "ami-ad860bcd"
            }
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "Io1Set": {
            "Fn::Equals": [
                {
                    "Ref": "VolumeType"
                },
                "io1"
            ]
        }
    },
    "Resources": {
        "EC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2InstanceRole"
                    }
                ]
            }
        },
        "EC2InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
                ],
                "Path": "/"
            }
        },
        "rGitSecurityGroup": {
            "Properties": {
                "GroupDescription": "Ports needed for GitLab CE",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "8080",
                        "IpProtocol": "tcp",
                        "ToPort": "8080"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "122",
                        "IpProtocol": "tcp",
                        "ToPort": "122"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "1194",
                        "IpProtocol": "udp",
                        "ToPort": "1194"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "161",
                        "IpProtocol": "udp",
                        "ToPort": "161"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "9418",
                        "IpProtocol": "tcp",
                        "ToPort": "9418"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "25",
                        "IpProtocol": "tcp",
                        "ToPort": "25"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AccessCIDR"
                        },
                        "FromPort": "8443",
                        "IpProtocol": "tcp",
                        "ToPort": "8443"
                    }
                ],
                "VpcId": {
                    "Ref": "VPCID"
                }
            },
            "Type": "AWS::EC2::SecurityGroup",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "17633600-2812-4565-9f9d-1f06f35b86ff"
                }
            }
        },
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdf",
                        "Ebs": {
                            "Encrypted": "true",
                            "Iops": {
                                "Fn::If": [
                                    "Io1Set",
                                    {
                                        "Ref": "ProvisionedIops"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "VolumeSize": {
                                "Ref": "VolumeSize"
                            },
                            "VolumeType": {
                                "Ref": "VolumeType"
                            }
                        }
                    }
                ],
                "EbsOptimized": "true",
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "rGitSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "GitLab CE"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "apt-get install -y aws-cfn-bootstrap\n",
								"#fix ec2 hostname resolution\n",
                                "wget https://s3.amazonaws.com/baseline.quickstart.talend/bootstrap/ec2-metadata\n",
								"chmod +x ec2-metadata\n",
                                "wget https://s3.amazonaws.com/baseline.quickstart.talend/bootstrap/update_hosts.sh\n",
								"chmod +x update_hosts.sh\n",
                                "./update_hosts.sh\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource TalendServerInstance ",
                                "         --configsets All ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource TalendServerInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "All": [
                            "Prepare",
                            "Download",
                            "Configure",
                            "Install"
                        ]
                    },
                    "Prepare": {
                        "commands": {
                            "00-gitlab-reconfigure": {
                                "command": "gitlab-ctl reconfigure"
                            },
                            "01-install-ruby": {
                                "command": "apt-get install -y ruby"
                            },
                            "02-install-jq": {
                                "command": "apt-get install -y jq"
                            },
                            "03-install-gitlab": {
                                "command": "gem install gitlab"
                            }
                        }
                    },
                    "Download": {
                        "files": {
                            "/home/ubuntu/gitlab-init.sh": {
                                "source": {
                                    "Fn::FindInMap": [
                                        "Talend",
                                        "gitlab",
                                        "init"
                                    ]
                                },
                                "owner": "ubuntu",
                                "group": "ubuntu",
                                "mode": "000500"
                            }
                        }
                    },
                    "Configure": {
                        "files": {
                            "/home/ubuntu/gitlab-init.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            { "Fn::Sub": "git_admin_userid=${GitAdminUserid}" },
                                            { "Fn::Sub": "git_admin_password=${GitAdminPassword}" },
                                            { "Fn::Sub": "git_admin_email=${GitAdminEmail}" },
                                            { "Fn::Sub": "git_tac_userid=${GitTacUserid}" },
                                            { "Fn::Sub": "git_tac_password=${GitTacPassword}" },
                                            { "Fn::Sub": "git_tac_email=${GitTacEmail}" },
                                            { "Fn::Sub": "git_repo=${GitRepo}" }
                                        ]
                                    ]
                                },
                                "owner": "root",
                                "group": "root",
                                "mode": "000400"
                            }
                        }
                    },
                    "Install": {
                        "commands": {
                            "01-install-gitlab": {
                                "command": "source /home/ubuntu/gitlab-init.conf; /home/ubuntu/gitlab-init.sh"
                            }
                        }
                    }
                }
            }
        }
    },
    "Outputs": {
        "AvailabilityZone": {
            "Description": "Availability Zone of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "EC2Instance",
                    "AvailabilityZone"
                ]
            }
        },
        "rGitSecurityGroup": {
            "Value": {
                "Ref": "rGitSecurityGroup"
            }
        },
        "GitInstanceId": {
            "Description": "Git server EC2 Instance ID.",
            "Value": {
                "Ref": "EC2Instance"
            }
        },
        "GitInstanceProfileId": {
            "Description": "Git server EC2 Instance Profile.",
            "Value": {
                "Ref": "EC2InstanceProfile"
            }
        },
        "GitRoleId": {
            "Description": "Git server EC2 Instance Role.",
            "Value": {
                "Ref": "EC2InstanceRole"
            }
        }
    }
}